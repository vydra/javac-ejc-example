/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:21.0'
    // https://mvnrepository.com/artifact/org.eclipse.jdt.core.compiler/ecj
    compile group: 'org.eclipse.jdt.core.compiler', name: 'ecj', version: '4.6.1'
 

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

// Define the main class for the application
mainClassName = 'App'

if (System.getProperty('ecj')) {
    // use the eclipse JDT compiler (for consistency with build in eclipse, including warnings
    tasks.withType(JavaCompile) { task ->
        project.file("${project.buildDir}/work/${task.name}").mkdirs()

        options.fork = true
        options.incremental = true
        options.encoding = 'UTF-8'
            options.forkOptions.with {
                executable = 'java'
                jvmArgs = []
                jvmArgs += "-Xmx1g" as String
                jvmArgs += "-XX:MaxPermSize=128m" as String
                jvmArgs += ['-classpath', rootProject.configurations.compile.asPath]
                jvmArgs += 'org.eclipse.jdt.internal.compiler.batch.Main'
                jvmArgs += '-warn:none'
                jvmArgs += '-preserveAllLocals'
                logger.debug "compile.jvmArgs=$jvmArgs"
            }
        options.compilerArgs = []
        options.compilerArgs += ['-s', "${project.buildDir}/work/${task.name}"]
    }
}

